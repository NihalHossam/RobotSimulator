// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package main.java.softdesign;

import java.util.ArrayList;
import java.util.HashMap;
/************************************************************/
/**
 * 
 */
public class PositionAdapter {
	/**HashMap containing coordinates and sensor measurements for search map updating
	 * 
	 */
	private HashMap<Position, double[]> searchReport;

	/**Constructor for Position Adapter*/
	public PositionAdapter(HashMap<Position, double[]> coordinateList) {
		this.searchReport = coordinateList;
	}

	/**Creates a list of searched grid locations for the map update*/
	public ArrayList<Integer> generateCoveragePatch() {
		ArrayList<Integer> coveragePatch = new ArrayList<Integer>();
		for (Position i : this.searchReport.keySet()) {
			double centerx = ((Environment.WORLDSIZE*Map.PRECISION/2) + (i.getX()*Map.PRECISION));
			double centery = ((Environment.WORLDSIZE*Map.PRECISION/2) + (i.getY()*Map.PRECISION));
			int centerGrid = (int)((Math.floor(centery - 1)) * 50 + Math.floor(centerx));
			coveragePatch.add(centerGrid);
			double[] directionMeasurements = searchReport.get(i);
			double northExtent = centery + 2 * directionMeasurements[0];
			int northGrid = (int)((Math.floor(northExtent - 1)) * 50 + Math.floor(centerx));
			while(northGrid != centerGrid){
				coveragePatch.add(northGrid);
				northGrid = northGrid - 50;
			}
			double eastExtent = centerx - 2 * directionMeasurements[1];
			int eastGrid = (int)((Math.floor(centery - 1)) * 50 + Math.floor(eastExtent));
			while(eastGrid != centerGrid){
				coveragePatch.add(eastGrid);
				eastGrid = eastGrid + 1;
			}
			double southExtent = centery - 2 * directionMeasurements[2];
			int southGrid = (int)((Math.floor(southExtent - 1)) * 50 + Math.floor(centerx));
			while(southGrid != centerGrid){
				coveragePatch.add(southGrid);
				southGrid = southGrid + 50;
			}
			double westExtent = centerx + 2 * directionMeasurements[3];
			int westGrid = (int)((Math.floor(centery - 1)) * 50 + Math.floor(westExtent));
			while(westGrid != centerGrid){
				coveragePatch.add(westGrid);
				westGrid = westGrid - 1;
			}
		}
		return coveragePatch;
		
	}
};
